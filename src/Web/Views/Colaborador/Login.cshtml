@using SuporteSolidario.ViewModel
@model LoginViewModel

@{
    bool hasError = false;
    if(!String.IsNullOrEmpty(Model.MENSAGEM_ERRO))
    {
        hasError = true;
    }
}

<h2>@Model.TITULO_PAGINA</h2>
<hr />

<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-5 mt-5">
            @using (Html.BeginForm("Login", "Colaborador", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group mt-1">
                    @Html.LabelFor(model => model.Login, new { @class = "control-label" })
                    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mt-5">
                    @Html.CheckBoxFor(model => model.RememberMe)
                    @Html.LabelFor(model => model.RememberMe, new { @class = "control-label" })
                </div>
                <div class="form-group d-flex justify-content-between">
                    <input type="submit" value="Login" class="btn btn-primary" />
                    <a href="@Url.Action("SignUp", "Colaborador")" class="btn btn-secondary">Inscrever-se</a>                                        
                </div>                
            }
        </div>
    </div>
</div>

@if(hasError)
{
    <br/>
    <br/>
    <center><strong class="text-danger">@Model.MENSAGEM_ERRO</strong></center>
}